@model MVC_Task.Models.User

@{
    ViewBag.Title = "Register";
    List<SelectListItem> selectlist = new List<SelectListItem>
{
    new SelectListItem { Text = "Maharashtra", Value = "Maharashtra" },
    new SelectListItem { Text = "Karnataka", Value = "Karnataka" },
    new SelectListItem { Text = "Tamil Nadu", Value = "Tamil Nadu" },
    new SelectListItem { Text = "Gujarat", Value = "Gujarat" },
    new SelectListItem { Text = "Rajasthan", Value = "Rajasthan" }
};

}

@section styles{
    <link rel="stylesheet" href="~/Content/IntlInput/intlTelInput.min.css">
}

<h2>Register User</h2>

@using (Html.BeginForm(null, null, FormMethod.Post, new { @class = "register-form" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <span class="margin-top-10" style="float:right;"><i class="text-danger">*</i> Fields are Required</span>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Username, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Username, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Username, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="password-box-wrapper">
                    @Html.TextBoxFor(model => model.Password, new { @class = "form-control col-sm-10 password-box", @type = "password" })
                    <button class="eye-password-btn glyphicon glyphicon-eye-open btn btn-default" type="button"></button>
                </div>
                <div id="password-bar" class="padding-top-2 d-block col-md-5"></div>
            </div>
            <div class="col-md-10 col-md-offset-2">
                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ConfirmPassword, htmlAttributes: new { @class = "control-label col-md-2 " })
            <div class="col-md-10">
                <div class="password-box-wrapper">
                    @Html.TextBoxFor(model => model.ConfirmPassword, new { @class = "form-control col-sm-10 cpassword-box", @type = "password" })
                    <button class="eye-cpassword-btn glyphicon glyphicon-eye-open btn btn-default" type="button"></button>
                </div>
                @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger d-block" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="select-none">
                    <label class="radio-inline">
                        @Html.RadioButtonFor(model => model.Gender, "Male", new { @id = "radiobtn-male" }) Male
                    </label>
                    <label class="radio-inline">
                        @Html.RadioButtonFor(model => model.Gender, "Female", new { @id = "radiobtn-female" }) Female
                    </label>
                    <label class="radio-inline">
                        @Html.RadioButtonFor(model => model.Gender, "Other", new { @id = "radiobtn-other" }) Other
                    </label>
                </div>
                @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Address, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Pincode, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.Pincode, new { @class = "form-control", type = "number" })
                @Html.ValidationMessageFor(model => model.Pincode, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.State, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.State, selectlist, "Select State", new { @class = "form-control " })
                @Html.ValidationMessageFor(model => model.State, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PhoneNo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PhoneNo, new { htmlAttributes = new { @class = "form-control", id = "phone", @type = "tel" } })
                @Html.ValidationMessageFor(model => model.PhoneNo, "", new { @class = "text-danger d-block phone-msg" })
            </div>
        </div>

        <div class="form-group ">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-success" />
                <input type="reset" value="Reset" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    Already Have Account? @Html.ActionLink("Login", "Login")
</div>

@section Scripts {
    <script src="~/Scripts/IntlTelInput/intlTelInputWithUtils.min.js"></script>
    <script src="~/Scripts/IntlTelInput/Intelinput.js"></script>
}
